// vite.config.ts
import {
  cloudflareDevProxyVitePlugin,
  vitePlugin as remix
} from "file:///home/owenstack/repos/gogenie/node_modules/@remix-run/dev/dist/index.js";
import tailwindcss from "file:///home/owenstack/repos/gogenie/node_modules/@tailwindcss/vite/dist/index.mjs";
import { defineConfig } from "file:///home/owenstack/repos/gogenie/node_modules/vite/dist/node/index.js";
import tsconfigPaths from "file:///home/owenstack/repos/gogenie/node_modules/vite-tsconfig-paths/dist/index.js";

// server/load-context.ts
function getLoadContext({ context }) {
  return context;
}

// vite.config.ts
var vite_config_default = defineConfig({
  plugins: [
    tailwindcss(),
    cloudflareDevProxyVitePlugin({
      getLoadContext
    }),
    remix({
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_throwAbortReason: true,
        v3_singleFetch: true,
        v3_lazyRouteDiscovery: true
      }
    }),
    tsconfigPaths()
  ],
  ssr: {
    resolve: {
      conditions: ["workerd", "worker", "browser"]
    }
  },
  resolve: {
    mainFields: ["browser", "module", "main"]
  },
  build: {
    minify: true
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAic2VydmVyL2xvYWQtY29udGV4dC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL293ZW5zdGFjay9yZXBvcy9nb2dlbmllXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvaG9tZS9vd2Vuc3RhY2svcmVwb3MvZ29nZW5pZS92aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vaG9tZS9vd2Vuc3RhY2svcmVwb3MvZ29nZW5pZS92aXRlLmNvbmZpZy50c1wiO2ltcG9ydCB7XG5cdGNsb3VkZmxhcmVEZXZQcm94eVZpdGVQbHVnaW4sXG5cdHZpdGVQbHVnaW4gYXMgcmVtaXgsXG59IGZyb20gXCJAcmVtaXgtcnVuL2RldlwiO1xuaW1wb3J0IHRhaWx3aW5kY3NzIGZyb20gXCJAdGFpbHdpbmRjc3Mvdml0ZVwiO1xuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcbmltcG9ydCB0c2NvbmZpZ1BhdGhzIGZyb20gXCJ2aXRlLXRzY29uZmlnLXBhdGhzXCI7XG5pbXBvcnQgeyBnZXRMb2FkQ29udGV4dCB9IGZyb20gXCIuL3NlcnZlci9sb2FkLWNvbnRleHRcIjtcblxuZGVjbGFyZSBtb2R1bGUgXCJAcmVtaXgtcnVuL2Nsb3VkZmxhcmVcIiB7XG5cdGludGVyZmFjZSBGdXR1cmUge1xuXHRcdHYzX3NpbmdsZUZldGNoOiB0cnVlO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XG5cdHBsdWdpbnM6IFtcblx0XHR0YWlsd2luZGNzcygpLFxuXHRcdGNsb3VkZmxhcmVEZXZQcm94eVZpdGVQbHVnaW4oe1xuXHRcdFx0Z2V0TG9hZENvbnRleHQsXG5cdFx0fSksXG5cdFx0cmVtaXgoe1xuXHRcdFx0ZnV0dXJlOiB7XG5cdFx0XHRcdHYzX2ZldGNoZXJQZXJzaXN0OiB0cnVlLFxuXHRcdFx0XHR2M19yZWxhdGl2ZVNwbGF0UGF0aDogdHJ1ZSxcblx0XHRcdFx0djNfdGhyb3dBYm9ydFJlYXNvbjogdHJ1ZSxcblx0XHRcdFx0djNfc2luZ2xlRmV0Y2g6IHRydWUsXG5cdFx0XHRcdHYzX2xhenlSb3V0ZURpc2NvdmVyeTogdHJ1ZSxcblx0XHRcdH0sXG5cdFx0fSksXG5cdFx0dHNjb25maWdQYXRocygpLFxuXHRdLFxuXHRzc3I6IHtcblx0XHRyZXNvbHZlOiB7XG5cdFx0XHRjb25kaXRpb25zOiBbXCJ3b3JrZXJkXCIsIFwid29ya2VyXCIsIFwiYnJvd3NlclwiXSxcblx0XHR9LFxuXHR9LFxuXHRyZXNvbHZlOiB7XG5cdFx0bWFpbkZpZWxkczogW1wiYnJvd3NlclwiLCBcIm1vZHVsZVwiLCBcIm1haW5cIl0sXG5cdH0sXG5cdGJ1aWxkOiB7XG5cdFx0bWluaWZ5OiB0cnVlLFxuXHR9LFxufSk7XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL293ZW5zdGFjay9yZXBvcy9nb2dlbmllL3NlcnZlclwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvb3dlbnN0YWNrL3JlcG9zL2dvZ2VuaWUvc2VydmVyL2xvYWQtY29udGV4dC50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vaG9tZS9vd2Vuc3RhY2svcmVwb3MvZ29nZW5pZS9zZXJ2ZXIvbG9hZC1jb250ZXh0LnRzXCI7aW1wb3J0IHR5cGUgeyBQbGF0Zm9ybVByb3h5IH0gZnJvbSBcIndyYW5nbGVyXCI7XG5cbnR5cGUgR2V0TG9hZENvbnRleHRBcmdzID0ge1xuXHRyZXF1ZXN0OiBSZXF1ZXN0O1xuXHRjb250ZXh0OiB7XG5cdFx0Y2xvdWRmbGFyZTogT21pdDxQbGF0Zm9ybVByb3h5PEVudj4sIFwiZGlzcG9zZVwiIHwgXCJjYWNoZXNcIiB8IFwiY2ZcIj4gJiB7XG5cdFx0XHRjYWNoZXM6IFBsYXRmb3JtUHJveHk8RW52PltcImNhY2hlc1wiXSB8IENhY2hlU3RvcmFnZTtcblx0XHRcdGNmOiBSZXF1ZXN0W1wiY2ZcIl07XG5cdFx0fTtcblx0fTtcbn07XG5cbmRlY2xhcmUgbW9kdWxlIFwiQHJlbWl4LXJ1bi9jbG91ZGZsYXJlXCIge1xuXHRpbnRlcmZhY2UgQXBwTG9hZENvbnRleHQgZXh0ZW5kcyBSZXR1cm5UeXBlPHR5cGVvZiBnZXRMb2FkQ29udGV4dD4ge1xuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2FkQ29udGV4dCh7IGNvbnRleHQgfTogR2V0TG9hZENvbnRleHRBcmdzKSB7XG5cdHJldHVybiBjb250ZXh0O1xufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIG5hbWVzcGFjZSBOb2RlSlMge1xuICAgICAgaW50ZXJmYWNlIFByb2Nlc3NFbnYgZXh0ZW5kcyBFbnYge31cbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUF5UTtBQUFBLEVBQ3hRO0FBQUEsRUFDQSxjQUFjO0FBQUEsT0FDUjtBQUNQLE9BQU8saUJBQWlCO0FBQ3hCLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sbUJBQW1COzs7QUNXbkIsU0FBUyxlQUFlLEVBQUUsUUFBUSxHQUF1QjtBQUMvRCxTQUFPO0FBQ1I7OztBREpBLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzNCLFNBQVM7QUFBQSxJQUNSLFlBQVk7QUFBQSxJQUNaLDZCQUE2QjtBQUFBLE1BQzVCO0FBQUEsSUFDRCxDQUFDO0FBQUEsSUFDRCxNQUFNO0FBQUEsTUFDTCxRQUFRO0FBQUEsUUFDUCxtQkFBbUI7QUFBQSxRQUNuQixzQkFBc0I7QUFBQSxRQUN0QixxQkFBcUI7QUFBQSxRQUNyQixnQkFBZ0I7QUFBQSxRQUNoQix1QkFBdUI7QUFBQSxNQUN4QjtBQUFBLElBQ0QsQ0FBQztBQUFBLElBQ0QsY0FBYztBQUFBLEVBQ2Y7QUFBQSxFQUNBLEtBQUs7QUFBQSxJQUNKLFNBQVM7QUFBQSxNQUNSLFlBQVksQ0FBQyxXQUFXLFVBQVUsU0FBUztBQUFBLElBQzVDO0FBQUEsRUFDRDtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1IsWUFBWSxDQUFDLFdBQVcsVUFBVSxNQUFNO0FBQUEsRUFDekM7QUFBQSxFQUNBLE9BQU87QUFBQSxJQUNOLFFBQVE7QUFBQSxFQUNUO0FBQ0QsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
